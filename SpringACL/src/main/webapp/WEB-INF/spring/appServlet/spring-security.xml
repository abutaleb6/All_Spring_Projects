<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	   		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">	

	<!-- @author Ahasanul Ashid, IBCS, @author Abu Taleb, IBCS -->
	
	<!-- This is where we configure Spring-Security -->
	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/auth/denied.do">

		<security:form-login login-page="/auth/login.do"
			authentication-failure-url="/auth/login.do?error=true"
			default-target-url="/common.do" />

		<security:logout invalidate-session="true"
			logout-success-url="/auth/logout.do" logout-url="/auth/logout.do" />

		<security:custom-filter ref="concurrencyFilter"
			position="CONCURRENT_SESSION_FILTER" />
		<security:session-management
			session-authentication-strategy-ref="sas" />
		<security:expression-handler ref="webExpressionHandler" />		
	</security:http>
	

	<!-- Declare ExpressionHandler for annotation Base hasPermission Method and Spring Security-->
	<bean id="webExpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="customPermissionEvaluator" />
	</bean>

	<!-- Bean Declare for CustomPermissionEvaluator which created by me and implements PermissionEvaluator from Spring -->
	<bean class="com.ibcs.acl.security.CustomPermissionEvaluator" id="customPermissionEvaluator" />

	<!-- Permission and Role Inject -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- Filter Chain Configuration -->
	<bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter"
		p:sessionRegistry-ref="sessionRegistry" p:expiredUrl="/auth/logout.do" />

	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<bean id="customUserDetailsService" class="com.ibcs.acl.service.MyUserDetailsService" />
	
	<!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
	<bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_VISITOR
				ROLE_VISITOR > ROLE_USER
			</value>
		</property>
	</bean>

	<!-- SessionFactory declare for getCurrentSession() -->
	<bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy"
		p:maximumSessions="1">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</bean>

	<!-- Maintains a registry of SessionInformation instances See: http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/session/SessionRegistry.html -->
	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<!-- In Spring Security 3.1.x when trying to intercept url pattern-->
	<bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
		
	<!-- Testing User's permission on JSP page -->
	<bean class="com.ibcs.acl.model.User" id="user" />	

	<!-- Declare Base package -->
	<context:component-scan base-package="com.ibcs.acl" />
</beans>


